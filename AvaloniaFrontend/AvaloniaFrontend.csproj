<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net7.0</TargetFramework>
		<Nullable>enable</Nullable>
		<!--Avalonia doesen't support TrimMode=link currently,but we are working on that https://github.com/AvaloniaUI/Avalonia/issues/6892 -->
		<TrimMode>copyused</TrimMode>
		<BuiltInComInteropSupport>true</BuiltInComInteropSupport>
		<ImplicitUsings>true</ImplicitUsings>
	</PropertyGroup>
	<ItemGroup>
		<AvaloniaResource Include="Assets\**" />
		<None Remove=".gitignore" />
	</ItemGroup>
	<ItemGroup>
		<!--This helps with theme dll-s trimming.
	If you will publish your application in self-contained mode with p:PublishTrimmed=true and it will use Fluent theme Default theme will be trimmed from the output and vice versa.
	https://github.com/AvaloniaUI/Avalonia/issues/5593 -->
		<TrimmableAssembly Include="Avalonia.Themes.Fluent" />
		<TrimmableAssembly Include="Avalonia.Themes.Default" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="Avalonia" Version="0.10.18" />
		<PackageReference Include="Avalonia.Desktop" Version="0.10.18" />
		<!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
		<PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="0.10.18" />
		<PackageReference Include="Avalonia.ReactiveUI" Version="0.10.18" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.1.0" />
		<PackageReference Include="Material.Icons.Avalonia" Version="1.1.10" />
		<PackageReference Include="Serilog" Version="3.0.2-dev-02044" />
		<PackageReference Include="Serilog.Sinks.File" Version="5.0.1-dev-00947" />
		<PackageReference Include="XamlNameReferenceGenerator" Version="1.3.4" />
		<PackageReference Include="ScottPlot.Avalonia" Version="4.1.61" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\AudioEngineWrapper\AudioEngineWrapper.vcxproj" />
		<ProjectReference Include="..\Core\Core.csproj" />
	</ItemGroup>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
		<Exec Command="xcopy /y &quot;$(SolutionDir)x64\$(Configuration)\*.dll&quot; &quot;$(OutDir)&quot;" />
	</Target>
</Project>
